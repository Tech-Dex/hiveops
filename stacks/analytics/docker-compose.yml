services:

  #  ██████╗  █████╗ ███████╗██╗  ██╗
  #  ██╔══██╗██╔══██╗██╔════╝██║  ██║
  #  ██║  ██║███████║███████╗███████║
  #  ██║  ██║██╔══██║╚════██║██╔══██║
  #  ██████╔╝██║  ██║███████║██║  ██║██╗
  #  ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝
  dash:
    image: mauricenino/dashdot:latest
    container_name: dashdot
    privileged: true
    environment:
      DASHDOT_ENABLE_CPU_TEMPS: 'true'
    volumes:
      - /:/mnt/host:ro
    ports:
      - '3001:3001'
    restart: unless-stopped
    networks:
      - analytics
      - proxy


  #   ██████╗ ██████╗  █████╗ ███████╗ █████╗ ███╗   ██╗ █████╗
  #  ██╔════╝ ██╔══██╗██╔══██╗██╔════╝██╔══██╗████╗  ██║██╔══██╗
  #  ██║  ███╗██████╔╝███████║█████╗  ███████║██╔██╗ ██║███████║
  #  ██║   ██║██╔══██╗██╔══██║██╔══╝  ██╔══██║██║╚██╗██║██╔══██║
  #  ╚██████╔╝██║  ██║██║  ██║██║     ██║  ██║██║ ╚████║██║  ██║
  #   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "8087:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - ${CONFIG_PATH}/grafana:/var/lib/grafana
    restart: unless-stopped
    networks:
      - analytics
      - db_network
      - proxy

  #  ██╗   ██╗██████╗ ████████╗██╗███╗   ███╗███████╗    ██╗  ██╗██╗   ██╗███╗   ███╗ █████╗
  #  ██║   ██║██╔══██╗╚══██╔══╝██║████╗ ████║██╔════╝    ██║ ██╔╝██║   ██║████╗ ████║██╔══██╗
  #  ██║   ██║██████╔╝   ██║   ██║██╔████╔██║█████╗█████╗█████╔╝ ██║   ██║██╔████╔██║███████║
  #  ██║   ██║██╔═══╝    ██║   ██║██║╚██╔╝██║██╔══╝╚════╝██╔═██╗ ██║   ██║██║╚██╔╝██║██╔══██║
  #  ╚██████╔╝██║        ██║   ██║██║ ╚═╝ ██║███████╗    ██║  ██╗╚██████╔╝██║ ╚═╝ ██║██║  ██║
  #   ╚═════╝ ╚═╝        ╚═╝   ╚═╝╚═╝     ╚═╝╚══════╝    ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚═╝  ╚═╝
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    ports:
      - "3030:3001"
    volumes:
      - ${CONFIG_PATH}/uptime-kuma:/app/data
    restart: unless-stopped
    networks:
      - analytics
      - black-sea
      - nextcloud
      - nvr
      - proxy

  #  ███╗   ██╗████████╗███████╗██╗   ██╗
  #  ████╗  ██║╚══██╔══╝██╔════╝╚██╗ ██╔╝
  #  ██╔██╗ ██║   ██║   █████╗   ╚████╔╝
  #  ██║╚██╗██║   ██║   ██╔══╝    ╚██╔╝
  #  ██║ ╚████║   ██║   ██║        ██║
  #  ╚═╝  ╚═══╝   ╚═╝   ╚═╝        ╚═╝
  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve
    environment:
      - TZ=${TZ}
      - NTFY_BASE_URL=${NTFY_BASE_URL}
      - NTFY_CACHE_FILE=/var/cache/ntfy/cache.db
      - NTFY_AUTH_FILE=/var/cache/ntfy/auth.db
      - NTFY_ATTACHMENT_CACHE_DIR=/var/cache/ntfy/attachments
      - NTFY_UPSTREAM_BASE_URL=https://ntfy.sh
      - NTFY_BEHIND_PROXY=true
      - NTFY_AUTH_DEFAULT_ACCESS=deny-all
      - NTFY_ENABLE_LOGIN=true
    user: "${PUID_NTFY}:${PGID_NTFY}"
    volumes:
      - ${CACHE_PATH}/ntfy:/var/cache/ntfy
      - ${CONFIG_PATH}/ntfy:/etc/ntfy
    ports:
      - "8081:80"
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - analytics
      - black-sea
      - nextcloud
      - nvr
      - proxy

networks:
  analytics:
    external: true
    name: analytics
  black-sea:
    external: true
    name: black-sea
  nextcloud:
    external: true
    name: nextcloud
  nvr:
    external: true
    name: nvr
  proxy:
    external: true
    name: proxy
  db_network:
    external: true
    name: db_network


services:

  #  ██████╗  ██████╗ ███████╗████████╗ ██████╗ ██████╗ ███████╗███████╗ ██████╗ ██╗
  #  ██╔══██╗██╔═══██╗██╔════╝╚══██╔══╝██╔════╝ ██╔══██╗██╔════╝██╔════╝██╔═══██╗██║
  #  ██████╔╝██║   ██║███████╗   ██║   ██║  ███╗██████╔╝█████╗  ███████╗██║   ██║██║
  #  ██╔═══╝ ██║   ██║╚════██║   ██║   ██║   ██║██╔══██╗██╔══╝  ╚════██║██║▄▄ ██║██║
  #  ██║     ╚██████╔╝███████║   ██║   ╚██████╔╝██║  ██║███████╗███████║╚██████╔╝███████╗
  #  ╚═╝      ╚═════╝ ╚══════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝ ╚══▀▀═╝ ╚══════╝
  postgres:
    image: postgres:latest
    container_name: dev-postgres
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "15432:5432"
    volumes:
      - ${CONFIG_PATH}/postgres:/var/lib/postgresql/data
    networks:
      - db_network
      - proxy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5

  #  ███╗   ███╗ █████╗ ██████╗ ██╗ █████╗ ██████╗ ██████╗
  #  ████╗ ████║██╔══██╗██╔══██╗██║██╔══██╗██╔══██╗██╔══██╗
  #  ██╔████╔██║███████║██████╔╝██║███████║██║  ██║██████╔╝
  #  ██║╚██╔╝██║██╔══██║██╔══██╗██║██╔══██║██║  ██║██╔══██╗
  #  ██║ ╚═╝ ██║██║  ██║██║  ██║██║██║  ██║██████╔╝██████╔╝
  #  ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝  ╚═╝╚═════╝ ╚═════╝
  mariadb:
    image: mariadb:latest
    container_name: dev-mariadb
    restart: unless-stopped
    environment:
      - MARIADB_ROOT_PASSWORD=${DB_PASSWORD}
      - MARIADB_DATABASE=${DB_NAME}
      - MARIADB_USER=${DB_USER}
      - MARIADB_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ${CONFIG_PATH}/mariadb:/var/lib/mysql
    networks:
      - db_network
      - proxy
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 5

  #  ███╗   ███╗ ██████╗ ███╗   ██╗ ██████╗  ██████╗ ██████╗ ██████╗
  #  ████╗ ████║██╔═══██╗████╗  ██║██╔════╝ ██╔═══██╗██╔══██╗██╔══██╗
  #  ██╔████╔██║██║   ██║██╔██╗ ██║██║  ███╗██║   ██║██║  ██║██████╔╝
  #  ██║╚██╔╝██║██║   ██║██║╚██╗██║██║   ██║██║   ██║██║  ██║██╔══██╗
  #  ██║ ╚═╝ ██║╚██████╔╝██║ ╚████║╚██████╔╝╚██████╔╝██████╔╝██████╔╝
  #  ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝  ╚═════╝ ╚═════╝ ╚═════╝
  mongodb:
    image: mongo:latest
    container_name: dev-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_NAME}
    ports:
      - "27017:27017"
    volumes:
      - ${CONFIG_PATH}/mongodb:/data/db
    networks:
      - db_network
      - proxy
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  #  ██████╗ ███████╗██████╗ ██╗███████╗
  #  ██╔══██╗██╔════╝██╔══██╗██║██╔════╝
  #  ██████╔╝█████╗  ██║  ██║██║███████╗
  #  ██╔══██╗██╔══╝  ██║  ██║██║╚════██║
  #  ██║  ██║███████╗██████╔╝██║███████║
  #  ╚═╝  ╚═╝╚══════╝╚═════╝ ╚═╝╚══════╝
  redis:
    image: redis:latest
    container_name: dev-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${DB_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ${CONFIG_PATH}/redis:/data
    networks:
      - db_network
      - proxy
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${DB_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  #  ██╗███╗   ██╗███████╗██╗     ██╗   ██╗██╗  ██╗██████╗ ██████╗
  #  ██║████╗  ██║██╔════╝██║     ██║   ██║╚██╗██╔╝██╔══██╗██╔══██╗
  #  ██║██╔██╗ ██║█████╗  ██║     ██║   ██║ ╚███╔╝ ██║  ██║██████╔╝
  #  ██║██║╚██╗██║██╔══╝  ██║     ██║   ██║ ██╔██╗ ██║  ██║██╔══██╗
  #  ██║██║ ╚████║██║     ███████╗╚██████╔╝██╔╝ ██╗██████╔╝██████╔╝
  #  ╚═╝╚═╝  ╚═══╝╚═╝     ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝ ╚═════╝
  influxdb:
    image: influxdb:2.7-alpine
    container_name: dev-influxdb
    restart: unless-stopped
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${DB_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${DB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
    ports:
      - "8086:8086"
    volumes:
      - ${CONFIG_PATH}/influxdb/data:/var/lib/influxdb2
      - ${CONFIG_PATH}/influxdb/config:/etc/influxdb2
    networks:
      - db_network
      - proxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  #  ███╗   ███╗██╗███╗   ██╗██╗ ██████╗
  #  ████╗ ████║██║████╗  ██║██║██╔═══██╗
  #  ██╔████╔██║██║██╔██╗ ██║██║██║   ██║
  #  ██║╚██╔╝██║██║██║╚██╗██║██║██║   ██║
  #  ██║ ╚═╝ ██║██║██║ ╚████║██║╚██████╔╝
  #  ╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝╚═╝ ╚═════╝
  #  S3-compatible object storage
  minio:
    image: minio/minio:latest
    container_name: dev-minio
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=${DB_USER}
      - MINIO_ROOT_PASSWORD=${DB_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${MEDIA_PATH}/minio:/data
    networks:
      - db_network
      - proxy
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Database Administration Tools

  #  ██████╗  ██████╗  █████╗ ██████╗ ███╗   ███╗██╗███╗   ██╗
  #  ██╔══██╗██╔════╝ ██╔══██╗██╔══██╗████╗ ████║██║████╗  ██║
  #  ██████╔╝██║  ███╗███████║██║  ██║██╔████╔██║██║██╔██╗ ██║
  #  ██╔═══╝ ██║   ██║██╔══██║██║  ██║██║╚██╔╝██║██║██║╚██╗██║
  #  ██║     ╚██████╔╝██║  ██║██████╔╝██║ ╚═╝ ██║██║██║ ╚████║
  #  ╚═╝      ╚═════╝ ╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dev-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${DB_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - ${CONFIG_PATH}/pgadmin:/var/lib/pgadmin
    networks:
      - db_network
      - proxy
    depends_on:
      - postgres

  #  ██████╗ ██╗  ██╗██████╗ ███╗   ███╗██╗   ██╗ █████╗ ██████╗ ███╗   ███╗██╗███╗   ██╗
  #  ██╔══██╗██║  ██║██╔══██╗████╗ ████║╚██╗ ██╔╝██╔══██╗██╔══██╗████╗ ████║██║████╗  ██║
  #  ██████╔╝███████║██████╔╝██╔████╔██║ ╚████╔╝ ███████║██║  ██║██╔████╔██║██║██╔██╗ ██║
  #  ██╔═══╝ ██╔══██║██╔═══╝ ██║╚██╔╝██║  ╚██╔╝  ██╔══██║██║  ██║██║╚██╔╝██║██║██║╚██╗██║
  #  ██║     ██║  ██║██║     ██║ ╚═╝ ██║   ██║   ██║  ██║██████╔╝██║ ╚═╝ ██║██║██║ ╚████║
  #  ╚═╝     ╚═╝  ╚═╝╚═╝     ╚═╝     ╚═╝   ╚═╝   ╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: dev-phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mariadb
      - PMA_USER=${DB_USER}
      - PMA_PASSWORD=${DB_PASSWORD}
    ports:
      - "5051:80"
    networks:
      - db_network
      - proxy
    depends_on:
      - mariadb

  #  ███╗   ███╗ ██████╗ ███╗   ██╗ ██████╗  ██████╗       ███████╗██╗  ██╗██████╗ ██████╗ ███████╗███████╗███████╗
  #  ████╗ ████║██╔═══██╗████╗  ██║██╔════╝ ██╔═══██╗      ██╔════╝╚██╗██╔╝██╔══██╗██╔══██╗██╔════╝██╔════╝██╔════╝
  #  ██╔████╔██║██║   ██║██╔██╗ ██║██║  ███╗██║   ██║█████╗█████╗   ╚███╔╝ ██████╔╝██████╔╝█████╗  ███████╗███████╗
  #  ██║╚██╔╝██║██║   ██║██║╚██╗██║██║   ██║██║   ██║╚════╝██╔══╝   ██╔██╗ ██╔═══╝ ██╔══██╗██╔══╝  ╚════██║╚════██║
  #  ██║ ╚═╝ ██║╚██████╔╝██║ ╚████║╚██████╔╝╚██████╔╝      ███████╗██╔╝ ██╗██║     ██║  ██║███████╗███████║███████║
  #  ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝  ╚═════╝       ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝
  mongo-express:
    image: mongo-express:latest
    container_name: dev-mongo-express
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=${DB_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${DB_PASSWORD}
    ports:
      - "5052:8081"
    networks:
      - db_network
      - proxy
    depends_on:
      - mongodb

  #  ██████╗ ███████╗██████╗ ██╗███████╗     ██████╗ ██████╗ ███╗   ███╗███╗   ███╗ █████╗ ███╗   ██╗██████╗ ███████╗██████╗
  #  ██╔══██╗██╔════╝██╔══██╗██║██╔════╝    ██╔════╝██╔═══██╗████╗ ████║████╗ ████║██╔══██╗████╗  ██║██╔══██╗██╔════╝██╔══██╗
  #  ██████╔╝█████╗  ██║  ██║██║███████╗    ██║     ██║   ██║██╔████╔██║██╔████╔██║███████║██╔██╗ ██║██║  ██║█████╗  ██████╔╝
  #  ██╔══██╗██╔══╝  ██║  ██║██║╚════██║    ██║     ██║   ██║██║╚██╔╝██║██║╚██╔╝██║██╔══██║██║╚██╗██║██║  ██║██╔══╝  ██╔══██╗
  #  ██║  ██║███████╗██████╔╝██║███████║    ╚██████╗╚██████╔╝██║ ╚═╝ ██║██║ ╚═╝ ██║██║  ██║██║ ╚████║██████╔╝███████╗██║  ██║
  #  ╚═╝  ╚═╝╚══════╝╚═════╝ ╚═╝╚══════╝     ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝ ╚══════╝╚═╝  ╚═╝
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: dev-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${DB_PASSWORD}
    ports:
      - "5053:8081"
    networks:
      - db_network
      - proxy
    depends_on:
      - redis

networks:
  db_network:
    external: true
    name: db_network
  proxy:
    external: true
    name: proxy